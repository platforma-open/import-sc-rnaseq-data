self := import("@platforma-sdk/workflow-tengo:tpl")
exec := import("@platforma-sdk/workflow-tengo:exec")
assets := import("@platforma-sdk/workflow-tengo:assets")

geneMap := import(":libs.gene-map")

self.defineOutputs("geneSymbolsCsv")

self.body(func(inputs) {
	species := inputs.species
	filteredGenesCountsCsv := inputs.filteredGenesCountsCsv

	geneAsset := geneMap.getGeneAsset(species)
	geneAssetName := geneMap.getAssetName(species)

	geneSymbolsJob := exec.builder().
		software(assets.importSoftware("@platforma-open/milaboratories.import-sc-rnaseq-data.software:map-genes")).
		mem("16GiB").
		cpu(1).
		addAsset(geneAsset, ".", geneAssetName).
		addFile("rawCounts.csv", filteredGenesCountsCsv).
		arg("--raw_counts").arg("rawCounts.csv").
		arg("--annotation").arg(geneAssetName).
		arg("--output").arg("geneSymbols.csv").
		saveFile("geneSymbols.csv").
		printErrStreamToStdout().
		run()

	return {
		geneSymbolsCsv: geneSymbolsJob.getFile("geneSymbols.csv")
	}
})
