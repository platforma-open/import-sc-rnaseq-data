ll := import("@platforma-sdk/workflow-tengo:ll")
json := import("json")

getRawColumns := func(blockId, species, inputSpec) {
  return {
    "axes": [
      {
        "column": "Sample",
        "spec": inputSpec.axesSpec[0]
      },
      {
        "column": "Cell ID",
        "spec": {
					"name": "pl7.app/sc/cellId",
					"type": "String",
					"annotations": {
						"pl7.app/label": "Cell ID",
						"pl7.app/parents": string(json.encode(["pl7.app/sampleId"])),
						"pl7.app/table/fontFamily": "monospace",
						"pl7.app/table/orderPriority": "110000",
						"pl7.app/table/visibility": "default"
					}
				}
      }, {
        "column": "Ensembl Id",
        "spec": {
						"name": "pl7.app/rna-seq/geneId",
						"type": "String",
						"domain": {
							"pl7.app/species": species
						},
						"annotations": {
							"pl7.app/label": "Ensembl Id",
              "pl7.app/table/visibility": "optional"
						}
					}
      }  
      ],
    "columns": [{
        "column": "Raw gene expression",
        "id": "rawCounts",
        "allowNA": true,
        "spec": {
          "name": "pl7.app/rna-seq/rawCount",
          "valueType": "Double",
          "domain": {
            "pl7.app/rna-seq/normalized": "false"
          },
          "annotations": {
            "pl7.app/label": "Raw counts",
            "pl7.app/table/hValue": "true"
          }
        }
      }
      ],
    "storageFormat": "Binary",
    "partitionKeyLength": 1
  }
}


getNormColumns := func(blockId, species, inputSpec) {
  return {
    "axes": [
      {
        "column": "Sample",
        "spec": inputSpec.axesSpec[0]
      },
      {
        "column": "Cell ID",
        "spec": {
					"name": "pl7.app/sc/cellId",
					"type": "String",
					"annotations": {
						"pl7.app/label": "Cell ID",
						"pl7.app/parents": string(json.encode(["pl7.app/sampleId"])),
						"pl7.app/table/fontFamily": "monospace",
						"pl7.app/table/orderPriority": "110000",
						"pl7.app/table/visibility": "default"
					}
				}
      }, {
        "column": "Ensembl Id",
        "spec": {
						"name": "pl7.app/rna-seq/geneId",
						"type": "String",
						"domain": {
							"pl7.app/species": species
						},
						"annotations": {
							"pl7.app/label": "Ensembl Id",
              "pl7.app/table/visibility": "optional"
						}
					}
      }  
      ],
    "columns": [{
        "column": "Normalized gene expression",
        "id": "normCounts",
        "allowNA": true,
        "spec": {
          "name": "pl7.app/rna-seq/normCount",
          "valueType": "Double",
          "domain": {
            "pl7.app/rna-seq/normalized": "true"
          },
          "annotations": {
            "pl7.app/label": "Normalized counts",
            "pl7.app/table/hValue": "true"
          }
        }
      }
      ],
    "storageFormat": "Binary",
    "partitionKeyLength": 1
  }
}

export ll.toStrict({
	getRawColumns: getRawColumns,
  getNormColumns: getNormColumns
})
